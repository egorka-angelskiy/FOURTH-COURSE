; задание уравнения в виде списка
(setq meEquation '(A / x + (D + E) = C))

;c = (a / x) + b
;c - b = a / x
;x = a / (c - b)

; выделение левой части относительно символа op
(defun left(e op)
    (if e
        (let ((f (car e)))
           (if (eq f op) nil
               (cons f (left (cdr e) op))
           )
        )
        nil
     )
)

; выделение правой части относительно символа op
(defun right(e op)
    (if e
        (let ((r (cdr e)))
            (if (eq (car e) op) r
                (right r op)
            )
        )
        nil
    )
)

(
	defun res(e)
	(
		let
		(
			(l (left e '=))
			(c (right e '=))
		)
		
		(
			let
			(
				(a (left l '/))
				(r (right l '/))
			)

			(
				let
				(
					(x (left r '+))
					(b (right r '+))
				)
				
				(format nil "~a = ~a / (~a - ~a)" (first x) (first a) (first c) (first b))
			)

		)
	)
)

(
	defun res(e)
	(
		let
		(
			(l (left e '=))
			(c (right e '=))
		)
		
		(
			let
			(
				(a (left l '/))
				(r (right l '/))
				(x (left (right l '/) '+))
				(b (right (right l '/) '+))
			)
			(format nil "~a = ~a / (~a - ~a)" (first x) (first a) (first c) (first b))


			;(
				;let
				;(
				;	(x (left r '+))
				;	(b (right r '+))
				;)
				
				;(format nil "~a = ~a / (~a - ~a)" (first x) (first a) (first c) (first b))
			;)

		)
	)
)

meEquation
(res meEquation)